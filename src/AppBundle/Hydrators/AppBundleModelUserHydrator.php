<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppBundleModelUserHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['last_name'])) {
            $value = $data['last_name'];
            $return = (string) $value;
            $this->class->reflFields['last_name']->setValue($document, $return);
            $hydratedData['last_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['first_name'])) {
            $value = $data['first_name'];
            $return = (string) $value;
            $this->class->reflFields['first_name']->setValue($document, $return);
            $hydratedData['first_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email'])) {
            $value = $data['email'];
            $return = (string) $value;
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['jobs']) ? $data['jobs'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['jobs']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['jobs']->setValue($document, $return);
        $hydratedData['jobs'] = $return;

        /** @Field(type="hash") */
        if (isset($data['languages'])) {
            $value = $data['languages'];
            $return = $value;
            $this->class->reflFields['languages']->setValue($document, $return);
            $hydratedData['languages'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['skills'])) {
            $value = $data['skills'];
            $return = $value;
            $this->class->reflFields['skills']->setValue($document, $return);
            $hydratedData['skills'] = $return;
        }
        return $hydratedData;
    }
}